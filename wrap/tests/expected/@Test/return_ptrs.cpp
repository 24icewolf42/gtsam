// automatically generated by wrap
#include <wrap/matlab.h>
#include <set>
#include <folder/path/to/Test.h>
using namespace geometry;
typedef boost::shared_ptr<Test> SharedTest;
typedef boost::shared_ptr<Test> SharedTest;
typedef boost::shared_ptr<Test> Shared;
void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
{
  checkArguments("return_ptrs",nargout,nargin-1,2);
  mxArray* mxh = mxGetProperty(in[0],0,"self");
  Shared* self = *reinterpret_cast<Shared**> (mxGetPr(mxh));
  Shared obj = *self;
  boost::shared_ptr<Test> p1 = unwrap_shared_ptr< Test >(in[1], "Test");
  boost::shared_ptr<Test> p2 = unwrap_shared_ptr< Test >(in[2], "Test");
  pair< SharedTest, SharedTest > result = obj->return_ptrs(p1,p2);
  SharedTest* ret = new SharedTest(result.first);
  out[0] = wrap_collect_shared_ptr(ret,"Test");
  SharedTest* ret = new SharedTest(result.second);
  out[1] = wrap_collect_shared_ptr(ret,"Test");
}
