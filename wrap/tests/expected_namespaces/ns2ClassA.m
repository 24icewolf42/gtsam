% automatically generated by wrap
classdef ns2ClassA < handle
  properties
    self = 0
  end
  methods
    function obj = ns2ClassA(varargin)
      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
        obj.self = varargin{2};
        testNamespaces_wrapper(obj.self);
      elseif nargin == 0
        obj.self = testNamespaces_wrapper(7);
      else
        error('Arguments do not match any overload of ns2ClassA constructor');
      end
    end

    function delete(obj)
      testNamespaces_wrapper(8, obj.self);
    end

    function display(obj), obj.print(''); end

    function disp(obj), obj.display; end

    function varargout = memberFunction(self, varargin)
      if length(varargin) == 0
        varargout{1} = testNamespaces_wrapper(9, self, varargin{:});
      else
        error('Arguments do not match any overload of function ns2ClassA.memberFunction');
      end
    end

    function varargout = nsArg(self, varargin)
      if length(varargin) == 1 && isa(varargin{1},'ns1ClassB')
        varargout{1} = testNamespaces_wrapper(10, self, varargin{:});
      else
        error('Arguments do not match any overload of function ns2ClassA.nsArg');
      end
    end

    function varargout = nsReturn(self, varargin)
      if length(varargin) == 1 && isa(varargin{1},'double')
        varargout{1} = testNamespaces_wrapper(11, self, varargin{:});
      else
        error('Arguments do not match any overload of function ns2ClassA.nsReturn');
      end
    end

  end

  methods(Static = true)
    function varargout = Afunction(varargin)
      if length(varargin) == 0
        varargout{1} = testNamespaces_wrapper(12, varargin{:});
      else
        error('Arguments do not match any overload of function ns2ClassA.Afunction');
      end
    end

  end
end
